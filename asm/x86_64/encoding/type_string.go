// Code generated by "stringer -type=Type"; DO NOT EDIT.

package encoding

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[T_Register-0]
	_ = x[T_IndirectRegister-1]
	_ = x[T_RIPRelative-2]
	_ = x[T_SIBRegister-3]
	_ = x[T_DisplacedRegister-4]
	_ = x[T_DisplacedSIBRegister-5]
	_ = x[T_Uint8-6]
	_ = x[T_Uint16-7]
	_ = x[T_Uint32-8]
	_ = x[T_Uint64-9]
	_ = x[T_Int32-10]
	_ = x[T_Float32-11]
	_ = x[T_Float64-12]
}

const _Type_name = "T_RegisterT_IndirectRegisterT_RIPRelativeT_SIBRegisterT_DisplacedRegisterT_DisplacedSIBRegisterT_Uint8T_Uint16T_Uint32T_Uint64T_Int32T_Float32T_Float64"

var _Type_index = [...]uint8{0, 10, 28, 41, 54, 73, 95, 102, 110, 118, 126, 133, 142, 151}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
