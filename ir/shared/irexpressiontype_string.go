// Code generated by "stringer -type=IRExpressionType"; DO NOT EDIT.

package shared

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Uint8-0]
	_ = x[Uint32-1]
	_ = x[Uint64-2]
	_ = x[Float64-3]
	_ = x[ByteArray-4]
	_ = x[StaticArray-5]
	_ = x[ArrayIndex-6]
	_ = x[Bool-7]
	_ = x[Struct-8]
	_ = x[StructField-9]
	_ = x[Not-10]
	_ = x[Add-11]
	_ = x[Sub-12]
	_ = x[Mul-13]
	_ = x[Div-14]
	_ = x[Variable-15]
	_ = x[Equals-16]
	_ = x[Syscall-17]
	_ = x[Cast-18]
	_ = x[Function-19]
	_ = x[Call-20]
}

const _IRExpressionType_name = "Uint8Uint32Uint64Float64ByteArrayStaticArrayArrayIndexBoolStructStructFieldNotAddSubMulDivVariableEqualsSyscallCastFunctionCall"

var _IRExpressionType_index = [...]uint8{0, 5, 11, 17, 24, 33, 44, 54, 58, 64, 75, 78, 81, 84, 87, 90, 98, 104, 111, 115, 123, 127}

func (i IRExpressionType) String() string {
	if i < 0 || i >= IRExpressionType(len(_IRExpressionType_index)-1) {
		return "IRExpressionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IRExpressionType_name[_IRExpressionType_index[i]:_IRExpressionType_index[i+1]]
}
