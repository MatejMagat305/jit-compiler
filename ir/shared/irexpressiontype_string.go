// Code generated by "stringer -type=IRExpressionType"; DO NOT EDIT.

package shared

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Uint8-0]
	_ = x[Uint64-1]
	_ = x[Float64-2]
	_ = x[ByteArray-3]
	_ = x[StaticArray-4]
	_ = x[ArrayIndex-5]
	_ = x[Bool-6]
	_ = x[Struct-7]
	_ = x[StructField-8]
	_ = x[Not-9]
	_ = x[Add-10]
	_ = x[Variable-11]
	_ = x[Equals-12]
	_ = x[Syscall-13]
	_ = x[Cast-14]
	_ = x[Function-15]
	_ = x[Call-16]
}

const _IRExpressionType_name = "Uint8Uint64Float64ByteArrayStaticArrayArrayIndexBoolStructStructFieldNotAddVariableEqualsSyscallCastFunctionCall"

var _IRExpressionType_index = [...]uint8{0, 5, 11, 18, 27, 38, 48, 52, 58, 69, 72, 75, 83, 89, 96, 100, 108, 112}

func (i IRExpressionType) String() string {
	if i < 0 || i >= IRExpressionType(len(_IRExpressionType_index)-1) {
		return "IRExpressionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IRExpressionType_name[_IRExpressionType_index[i]:_IRExpressionType_index[i+1]]
}
